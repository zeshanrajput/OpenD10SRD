{
  "hash": "21c816ddb533f91c2295cf0cdd9df83d",
  "result": {
    "markdown": "# Character Creation\n\n## Basic Overview\n\n1. Choose a class.\n1. Sketch-out your character concept.\n1. Select a species, background, and other features (optional). \n1. Assign starting attribute points to attributes.\n1. Assign starting skill points to skills.\n1. Purchase gear and/or abilities.\n1. Complete character form.\n\n## Choosing a Power Level\n\nImplementations of OpenD10 will vary widely in power level. Some games will be about novice students learning the ways of the world, while others may feature demigods battling over the fate of the cosmos. Implementers set the power level by assigning a number of points at character creation. The following table suggests some limits for an average implementation:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Derive Tiering Table\n#| label: tbl-tiering\n#| fig-cap: \"The packages for characters starting in each tier.\"\n#| echo: false\n\nfrom sysdef import *\n\nattributes = []\nmax_attributes = []\nskills = []\n\nfor i in range(len(tiers)):\n  attributes.append(starting_attributes + i * attributes_per_tier)\n  max_attributes.append(starting_max_attribute + i * max_attributes_per_tier)\n  skills.append(starting_skills + i * skills_per_tier)\n\ntiering = {\n    \"Tier\": tiers,\n    \"Starting Attribute Points\": attributes,\n    \"Maximum Possible Attribute Value\": max_attributes,\n    \"Starting Skill Points\": skills\n}\n\ntier_table = pd.DataFrame(tiering)\n\ntier_table[\"XP Value of Tier Package\"] = tier_table[\"Starting Attribute Points\"] * xp_per_attribute + tier_table[\"Starting Skill Points\"] * xp_per_skill\n\ntier_table[\"XP per Event\"] = round((tier_table[\"XP Value of Tier Package\"] - tier_table[\"XP Value of Tier Package\"].shift(1)) / (tier_table.index.to_series() * num_events_per_tier_rating))\n\ndisplay(md(tabulate(tier_table, headers=[\"Rank\", \"Description\", \n  \"Starting Attribute Points\", \"Maximum Attribute Value\", \n  \"Starting Skill Points\", \"Value of Tier Package (XP)\", \"XP per session\"])))\n```\n\n::: {.cell-output .cell-output-display}\n  Rank  Description      Starting Attribute Points    Maximum Attribute Value    Starting Skill Points    Value of Tier Package (XP)    XP per session\n------  -------------  ---------------------------  -------------------------  -----------------------  ----------------------------  ----------------\n     0  NPC                                    200                         30                       50                          2100               nan\n     1  Novice                                 225                         35                      125                          2500                80\n     2  Veteran                                250                         40                      200                          2900                40\n     3  Expert                                 275                         45                      275                          3300                27\n     4  Hero                                   300                         50                      350                          3700                20\n:::\n:::\n\n\nThis table assumes default values for experience points per attribute point, experience points per skill point, and so on. If you'd like to see or change these weights, see the system definitions python file on GitHub. This table assumes that all experience points are spent on attributes and skills. If you want your players to start with more features, consider changing the point value of the tier package or lowering the starting numbers for skills and attributes.\n\n## Classes, Species, and Backgrounds\n\nMost implementations of OpenD10 will have a set of classes that fit the theme of that implementation. These may be mages and knights in a fantasy setting, spies and soldiers in contemporary settings, spaceship captains and temporal engineers in science-fiction settings, and so on. Classes should convey a sense of that character’s role on the team and be complementary with other classes to complete a wide variety of challenges. \n\nClasses are implemented as packages of skills and features. For example, a mage might have bonuses to magic skills and features that allow them access to supernatural (i.e. magical) abilities. Classes should be balanced against each other, so that no one class is significantly stronger or weaker than the others. To balance classes, ensure that the point values for the attributes, skills, and features they grant are equal. \n\nSpecies are optional additional packages describing a character’s lineage that may be offered as part of an implementation. A fantasy or space opera setting may have many species, while a contemporary setting would only have one or a very few. Species should be used to convey natural talents (such as darkvision or sensitivity to gravity) but not stereotypes (such as ‘Catfolk tend to be thieves and cutthroats.'). \n\nBackgrounds are another type of package that may allow a player to select from thematically appropriate origins for their character. Both species and backgrounds are implemented as packages of skills and features. These need not necessarily be balanced - instead deduct a number of points from their character creation pool equal to the cost of the species or background. \n\n## Attributes\n\nAll characters in OpenD10 share the same eight attributes regardless of implementation. \n\n## Skills\n\nAll characters in OpenD10 become skilled as a result of their experiences. These skills represent areas of particular expertise. \n\n###  Optional Rule: Proficiency\n\nIt is possible to have a proficiency-based skill system in an OpenD10 implementation. To do so: \n\n* Allow players to select a number of skills at character creation, and divide the available skill points among those skills.\n* At character progression milestones, equally increment all selected skills. \n\n## Features\n\nFeatures are the ways in which characters are exceptional. Some features are beneficial and cost character creation points, while others are detrimental and refund points. Some implementations may only allow features to be gained via class, background, and racial choices.\n\n## Gear and Abilities\n\nGear is the generic name for a character’s possessions and represents tools that they have to enable them to solve certain problems more easily (or at all). A character’s starting gear is purchased by converting points from the character creation pool into credits. An example of a piece of gear could be a laser gun.\n\nAn ability is an inherent piece of 'gear' - some way that a character has to solve certain problems more easily (or at all). A character that could fire a laser beam from their eyes has an ability to do so. Abilities are purchased using experience points.\n\nThe cost of a piece of gear is normally derived from factors such as: \n\n* The bonus it confers to a check (the ‘quality’ of the gear), \n* How often that check will occur,\n* Whether the gear is consumed when used,\n* How available the gear or its constituent parts are, and so on.\n\nThe cost of a piece of gear is derived the same way as the cost for an ability, except that gear is discounted for the ability to be stolen, broken, etc. In OpenD10 GMs must be cautious about the amount of loot players obtain, as this can equate to unexpected experience point gain and impact game balance. \n\n## Complete the Character Form\n\nSome of a character's parameters, like height and weight, are derived from their attributes. Others (such a defenses) come up so often that pre-calculating them can greatly accelerate game play. \n\n",
    "supporting": [
      "ch04_files\\figure-pdf"
    ],
    "filters": []
  }
}